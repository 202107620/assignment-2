import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Random;

public class GuessingGameGUI extends JFrame {
    private int minNumber = 1;
    private int maxNumber = 100;
    private int targetNumber;
    private int playerBalance = 100;
    private int betAmount = 10;

    private JLabel instructionLabel;
    private JTextField guessField;
    private JLabel betLabel;
    private JTextField betField;
    private JButton submitButton;
    private JLabel resultLabel;
    private JLabel balanceLabel;

    public GuessingGameGUI() {
        setTitle("Guessing Game with Betting");
        setSize(400, 200);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLayout(new FlowLayout());

        targetNumber = generateRandomNumber(minNumber, maxNumber);

        instructionLabel = new JLabel("Guess a number between " + minNumber + " and " + maxNumber + ":");
        guessField = new JTextField(10);
        betLabel = new JLabel("Bet amount:");
        betField = new JTextField(Integer.toString(betAmount), 5);
        submitButton = new JButton("Submit");
        resultLabel = new JLabel();
        balanceLabel = new JLabel("Balance: $" + playerBalance);

        submitButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                int guess = Integer.parseInt(guessField.getText());
                betAmount = Integer.parseInt(betField.getText());

                if (guess == targetNumber) {
                    playerBalance += betAmount;
                    resultLabel.setText("Congratulations! You guessed the correct number. You win $" + betAmount);
                } else {
                    playerBalance -= betAmount;
                    resultLabel.setText("Oops! That's not the correct number. You lose $" + betAmount);
                }

                balanceLabel.setText("Balance: $" + playerBalance);
                guessField.setText("");
                betField.setText(Integer.toString(betAmount));
                targetNumber = generateRandomNumber(minNumber, maxNumber);
            }
        });

        add(instructionLabel);
        add(guessField);
        add(betLabel);
        add(betField);
        add(submitButton);
        add(resultLabel);
        add(balanceLabel);

        setVisible(true);
    }

    private int generateRandomNumber(int min, int max) {
        Random rand = new Random();
        return rand.nextInt(max - min + 1) + min;
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                new GuessingGameGUI();
            }
        });
    }
}
output of this code -
The Java code provided above creates a Guessing Game with Betting GUI using Swing. When you run the code, a window will appear, prompting you to guess a number between 1 and 100 and place a bet.

Here's how the game works:

Enter your guess in the text field.
Enter the amount you want to bet in the bet field (default is $10).
Click the "Submit" button to check if your guess matches the target number.
The game will then display a message indicating whether your guess was correct or not. If your guess is correct, you win the amount you bet, and if it's incorrect, you lose the amount you bet. Your balance will be updated accordingly, and a new target number will be generated for the next round.

The game continues until you close the window or quit the application. The balance will persist across rounds.

For example, if you guess the correct number and bet $10, the result might look like this:
Congratulations! You guessed the correct number. You win $10
Balance: $110
If you guess the wrong number and bet $10, the result might look like this:
Oops! That's not the correct number. You lose $10
Balance: $90
we can keep playing the game and see how your balance changes with each round. Have fun guessing!



